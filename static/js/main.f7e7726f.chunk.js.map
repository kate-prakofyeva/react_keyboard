{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleClick","event","setState","key","document","addEventListener","this","removeEventListener","content","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,eAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAV/C,oBAiBE,WACE,IACIQ,EADIT,EAAeO,KAAKR,MAApBC,WAiBR,OATES,EALGT,EAMD,oBAAGU,UAAU,eAAb,sCAEGV,EAFH,OAJA,mBAAGU,UAAU,eAAb,qCAaF,qBAAKA,UAAU,MAAf,SACGD,QArCT,GAAyBE,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.f7e7726f.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleClick);\n  }\n\n  handleClick = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n    let content;\n\n    if (!pressedKey) {\n      content = (\n        <p className=\"App__message\">Nothing was pressed yet</p>\n      );\n    } else {\n      content = (\n        <p className=\"App__message\">\n          The last pressed key is [\n          {pressedKey}\n          ]\n        </p>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        {content}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}